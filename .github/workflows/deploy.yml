name: Deploy Evolution API to Railway

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Não precisa do env: RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} aqui no nível do job se cada passo que precisa vai declarar
    steps:
      - uses: actions/checkout@v3

      - name: Setup Railway CLI and Login
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} # Define o token no ambiente DESTE PASSO
        run: |
          curl -fsSL https://railway.app/install.sh | sh
          railway login # Tenta o login. Em ambientes de CI, com RAILWAY_TOKEN no env, isso deve funcionar.
                        # Se o CLI for mais antigo e esperar o token como argumento:
                        # railway login $RAILWAY_TOKEN
                        # A documentação sugere que apenas ter RAILWAY_TOKEN no env é suficiente.

      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} # Garante que está aqui também
          RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }} # Boa prática adicionar todos os secrets usados no passo
        run: |
          railway link --project $RAILWAY_PROJECT_ID
          railway up --yes

      - name: Set Environment Variables
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EVO_API_KEY: ${{ secrets.EVO_API_KEY }}
        run: |
          railway env set SERVER_TYPE=http
          railway env set SERVER_PORT=8080
          railway env set CORS_ORIGIN=*
          railway env set DATABASE_ENABLED=true
          railway env set DATABASE_PROVIDER=postgresql
          railway env set DATABASE_CONNECTION_URI=$DATABASE_URL
          railway env set AUTHENTICATION_API_KEY=$EVO_API_KEY
